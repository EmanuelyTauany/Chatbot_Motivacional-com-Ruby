<!DOCTYPE html>
<html lang="pt-BR">
<head>
  <meta charset="UTF-8">
  <title>Chat Motivacional</title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <style>
    /* Reset */
    * {
      margin: 0; padding: 0; box-sizing: border-box;
      font-family: "Segoe UI", Roboto, sans-serif;
    }
    body {
      display: flex; height: 100vh; overflow: hidden;
      background: #f4f7fb; color: #333;
    }

    /* Sidebar */
    .sidebar {
      background: #2b6cb0; color: #fff;
      width: 240px; padding: 20px;
      display: flex; flex-direction: column;
      transition: all .3s ease;
    }
    .sidebar h2 {
      margin-bottom: 20px;
      text-align: center;
    }
    .sidebar button {
      background: rgba(255,255,255,0.1);
      border: none; margin: 5px 0; padding: 10px;
      color: #fff; cursor: pointer;
      border-radius: 6px; transition: .3s;
      font-size: 14px;
    }
    .sidebar button:hover {
      background: rgba(255,255,255,0.25);
    }
    .sidebar .sos {
      background: #e53e3e;
      margin-top: auto;
      animation: pulse 1.5s infinite;
    }
    @keyframes pulse {
      0% { box-shadow: 0 0 0 0 rgba(229,62,62,.6); }
      70% { box-shadow: 0 0 0 12px rgba(229,62,62,0); }
      100% { box-shadow: 0 0 0 0 rgba(229,62,62,0); }
    }

    /* Chat area */
    .chat-container {
      flex: 1; display: flex; flex-direction: column;
    }
    .chat-header {
      background: #2b6cb0; color: #fff;
      padding: 15px; text-align: center;
      font-weight: bold; letter-spacing: 1px;
    }
    .messages {
      flex: 1; overflow-y: auto; padding: 20px;
      display: flex; flex-direction: column; gap: 12px;
    }
    .message {
      max-width: 70%; padding: 12px 16px;
      border-radius: 16px; line-height: 1.4;
      animation: fadeInUp .3s ease;
      word-wrap: break-word;
    }
    @keyframes fadeInUp {
      from { opacity: 0; transform: translateY(10px); }
      to { opacity: 1; transform: translateY(0); }
    }
    .message.user {
      align-self: flex-end;
      background: #2b6cb0; color: #fff;
      border-bottom-right-radius: 4px;
    }
    .message.system {
      align-self: flex-start;
      background: #e2e8f0; color: #2d3748;
      border-bottom-left-radius: 4px;
    }

    /* Input area */
    .input-container {
      display: flex; padding: 15px; background: #fff;
      border-top: 1px solid #ddd;
    }
    .input-container input {
      flex: 1; padding: 12px;
      border: 1px solid #ccc; border-radius: 8px;
      font-size: 14px;
    }
    .input-container button {
      margin-left: 10px; padding: 12px 16px;
      border: none; background: #2b6cb0; color: #fff;
      border-radius: 8px; cursor: pointer; transition: .3s;
    }
    .input-container button:hover {
      background: #2c5282;
    }

    /* Quick actions */
    .quick-actions {
      display: flex; gap: 8px;
      padding: 10px; background: #edf2f7;
      overflow-x: auto;
    }
    .quick-actions button {
      flex-shrink: 0; background: #fff;
      border: 1px solid #ccc;
      padding: 6px 12px; border-radius: 20px;
      font-size: 13px; cursor: pointer;
      transition: .2s;
    }
    .quick-actions button:hover {
      background: #e2e8f0;
    }

    /* Mood tracker */
    .mood-tracker {
      display: flex; gap: 6px; padding: 12px;
      justify-content: center; background: #fff;
      border-top: 1px solid #ddd;
    }
    .mood-tracker div {
      width: 24px; height: 24px; border-radius: 50%;
      background: #cbd5e0; display: flex;
      justify-content: center; align-items: center;
      font-size: 12px; cursor: pointer;
      transition: .3s;
    }
    .mood-tracker div:hover {
      background: #2b6cb0; color: #fff;
      transform: scale(1.1);
    }
    .mood-tracker div.active {
      background: #2b6cb0; color: #fff;
    }

    /* Typing indicator */
    .typing-indicator {
      display: none; align-items: center;
      gap: 4px; margin: 10px; font-size: 14px;
      color: #555;
    }
    .dot {
      width: 6px; height: 6px; border-radius: 50%;
      background: #555; animation: blink 1.4s infinite both;
    }
    .dot:nth-child(2) { animation-delay: .2s; }
    .dot:nth-child(3) { animation-delay: .4s; }
    @keyframes blink {
      0%, 80%, 100% { transform: scale(0); }
      40% { transform: scale(1); }
    }

    /* Responsive */
    @media (max-width: 768px) {
      .sidebar {
        position: fixed; bottom: 0; left: 0;
        width: 100%; flex-direction: row;
        justify-content: space-around; height: 60px;
        padding: 10px;
      }
      .sidebar h2 { display: none; }
      .sidebar button { flex: 1; margin: 0 4px; padding: 8px; }
      .sidebar .sos { margin-top: 0; }
    }
  </style>
</head>
<body>
  <div class="sidebar">
    <h2>Fun√ß√µes</h2>
    <button onclick="sendQuick('/daily_tip')">üí° Dica do Dia</button>
    <button onclick="sendQuick('/breathing')">üå¨Ô∏è Respira√ß√£o</button>
    <button onclick="sendQuick('/meditation')">üßò Medita√ß√£o</button>
    <button onclick="sendQuick('/affirmation')">‚ú® Afirma√ß√£o</button>
    <button onclick="sendQuick('/mood_check')">üìä Check-in Humor</button>
    <button onclick="sendQuick('/mood_trend')">üìà Humor Recente</button>
    <button onclick="sendQuick('/goal')">üéØ Nova Meta</button>
    <button onclick="sendQuick('/encouragement')">üåü Encorajamento</button>
    <button onclick="sendQuick('/motivation_combo')">‚ö° Combo Motivacional</button>
    <button onclick="sendQuick('/stats')">üìä Estat√≠sticas</button>
    <button class="sos" onclick="sendQuick('/sos')">üÜò SOS</button>
  </div>

  <div class="chat-container">
    <div class="chat-header">üí¨ Chat Motivacional</div>
    <div id="messages" class="messages">
      <% @messages.each do |m| %>
        <div class="message <%= m[:type] == 'user' ? 'user' : 'system' %>">
          <strong><%= m[:name] %>:</strong> <%= m[:msg].gsub("\n","<br>") %>
        </div>
      <% end %>
    </div>

    <div class="typing-indicator" id="typing">
      <span>Cl√°udia est√° digitando</span>
      <div class="dot"></div><div class="dot"></div><div class="dot"></div>
    </div>

    <div class="quick-actions">
      <button onclick="sendQuick('/daily_tip')">üí° Dica</button>
      <button onclick="sendQuick('/affirmation')">‚ú® Afirma√ß√£o</button>
      <button onclick="sendQuick('/breathing')">üå¨Ô∏è Respira√ß√£o</button>
    </div>

    <form class="input-container" method="post" action="/send" onsubmit="return handleSend(event)">
      <input type="text" id="name" name="name" placeholder="Seu nome" required>
      <input type="text" id="msg" name="msg" placeholder="Digite sua mensagem..." required>
      <button type="submit">Enviar</button>
    </form>

    <div class="mood-tracker">
      <% (1..10).each do |i| %>
        <div onclick="saveMood(<%= i %>)"><%= i %></div>
      <% end %>
    </div>
  </div>

  <script>
    const messages = document.getElementById("messages");
    const typing = document.getElementById("typing");

    function scrollToBottom(force = false) {
      if (force || messages.scrollTop + messages.clientHeight >= messages.scrollHeight - 100) {
        messages.scrollTop = messages.scrollHeight;
      }
    }
    scrollToBottom(true);

    function showTyping() {
      typing.style.display = "flex";
      setTimeout(() => { typing.style.display = "none"; scrollToBottom(true); }, 1500);
    }

    function handleSend(e) {
      e.preventDefault();
      showTyping();
      e.target.submit();
    }

    function sendQuick(route) {
      showTyping();
      setTimeout(() => { window.location.href = route; }, 600);
    }

    function saveMood(val) {
      document.querySelectorAll(".mood-tracker div").forEach(el => el.classList.remove("active"));
      event.target.classList.add("active");
      showTyping();
      fetch("/api/save_mood", {
        method: "POST",
        headers: { "Content-Type": "application/x-www-form-urlencoded" },
        body: "rating=" + val + "&user=" + document.getElementById("name").value
      }).then(() => {
        window.location.href = "/mood_trend";
      });
    }

    // Salvar nome do usu√°rio no localStorage
    const nameInput = document.getElementById("name");
    if (localStorage.getItem("username")) {
      nameInput.value = localStorage.getItem("username");
    }
    nameInput.addEventListener("change", () => {
      localStorage.setItem("username", nameInput.value);
    });
  </script>
</body>
</html>
